name: CI Test
on:
  pull_request:
  push:
    branches:
      - main
      - master
  workflow_dispatch:
    inputs:
      mode:
        description: 'Test mode: quick|default|full'
        required: true
        default: "default"

jobs:
  # The `setup` job determines the strategy for the real CI build job.
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      strategy: ${{ steps.strategy.outputs.result }}
    steps:
      - id: strategy
        name: Determine build strategy
        uses: actions/github-script@v6.1.0
        with:
          script: |
            // Matrix for the "quick" mode.
            const quickMatrix = {
              os: [
                "ubuntu-latest"
              ]
            };

            // Matrix for the "default" and "full" modes.
            const defaultMatrix = {
              os: [
                "ubuntu-latest",
                "macos-latest"
              ]
            };

            // Determine the mode from workflow inputs.
            let mode = "default";
            if (context.eventName == "workflow_dispatch") {
              const payload = context.payload;
              const inputs = payload && payload.inputs;
              mode = inputs && inputs.mode && inputs.mode.trim() || "default";
            } else if (context.eventName == "schedule") {
              mode = "full";
            }

            // Determine build strategy according to the selected mode.
            const strategy = {
              "fail-fast": !(mode == "full"),
              "matrix": (mode == "quick") ? quickMatrix : defaultMatrix
            };

            // Print the resulting strategy to the log.
            core.startGroup("Job strategy:");
            core.info(JSON.stringify(strategy, null, 2));
            core.endGroup();

            // Return the strategy as the step output in the JSON format.
            return strategy;
    
  # The real CI build job.
  build:
    name: Build
    needs: setup
    strategy: ${{ fromJSON(needs.setup.outputs.strategy) }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Success
        run: |
          true
