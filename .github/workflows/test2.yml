name: Test2
on:
  workflow_dispatch:
    inputs:
      flake_only:
        description: 'True to run flake tests only'
        default: false
        type: boolean

jobs:
  setup:
    strategy:
      matrix:
        # The value of `data` must be a sequence with a single element, which is
        # a mapping that will be used as the matrix for the actual build job.
        # Apparently this is the only way to keep the matrix represented in the
        # YAML form while still being able to process it as data.
        data:
          - nix:
              - channel: nixos-22.05
                flake: flake
              - channel: nixos-unstable
              - channel: nixpkgs-unstable
            os:
              - system: x86_64-linux
                runs_on: ubuntu-latest
              - system: x86_64-darwin
                runs_on: macos-latest
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.result }}
    steps:
      - id: matrix
        name: Prepare matrix
        env:
          DATA: ${{ toJSON(matrix.data) }}
        run: |
          if ${{ !!inputs.flake_only }}; then
            DATA="$(jq -c -n 'env.DATA | fromjson | .nix |= [{flake: "flake"}]')"
          fi
          jq -r -n 'env.DATA | fromjson | @json "::set-output name=result::\(.)"'

  test:
    needs:
      - setup
    strategy:
      matrix: ${{ fromJSON(needs.setup.outputs.matrix) }}
    runs-on: ${{ matrix.os.runs_on }}
    steps:
      - name: Report matrix value
        env:
          DATA: ${{ toJSON(matrix) }}
        run: |
          jq -n 'env.DATA | fromjson'
      - name: Flake tests
        if: matrix.nix.flake
        run: |
          echo "Running flake tests..."
      - name: Set NIX_PATH for non-flake tests
        if: matrix.nix.channel
        run: |
          echo "NIX_PATH=nixpkgs=channel:${{matrix.nix.channel}}" >> "$GITHUB_ENV"
      - name: Non-flake tests
        if: matrix.nix.channel
        run: |
          echo "Running non-flake tests..."

