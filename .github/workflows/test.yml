name: Test
on:
  workflow_dispatch:
    inputs:
      repository:
        description: Repository to test
        required: false
      ref:
        description: Branch or tag to test
        required: false
      os:
        description: OS to test
        required: false

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.setup.outputs.result }}
    steps:
      - id: setup
        name: Prepare the matrix
        uses: actions/github-script@v4.0.2
        with:
          script: |
            const defaultMatrix = {
              "source": [
                { "repo": "qmk/qmk_firmware", "ref": "master" },
                [{ "repo": "qmk/qmk_firmware", "ref": "develop" }],
              ],
              "nixPath": [ "nixpkgs=channel:nixos-20.09" ],
              "osPlaceholder": [ "ubuntu-latest", ["macos-latest"] ]
            };

            var matrix = { ...defaultMatrix };

            function expandEntry1(entry) {
              for (key in entry) {
                var value = entry[key];
                if (Array.isArray(value)) {
                  return value.flatMap(x => expandEntry1({ ...entry, [key]: x }));
                }
              }
              return [entry];
            }

            function expandEntryKeys(entry, keys, startPos) {
              for (let i = startPos; i < keys.length; ++i) {
                const key = keys[i];
                const value = entry[key];
                if (Array.isArray(value)) {
                  return value.flatMap(x => expandEntryKeys({ ...entry, [key]: x }, keys, i + 1));
                }
              }
              return [entry];
            }

            function expandEntry(entry) {
              return expandEntryKeys(entry, entry.keys(), 0);
            }

            function addToMatrix(extraEntry) {
              var entry = { ...defaultMatrix, ...extraEntry };
              matrix.include = (matrix.include || []).concat(expandEntry(entry));
            }

            addToMatrix({
              source: { repo: "sigprof/qmk_firmware", ref: "nix-shell-updates" },
              extra: "extraValue"
            });

            return matrix;

  dump:
    name: Dump
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Report data
        env:
          DATA: ${{ needs.setup.outputs.matrix }}
        run: |
          printf '%s' "$DATA" | jq

  Run:
    name: Run
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.setup.outputs.matrix) }}
    steps:
      - name: Report matrix value
        env:
          DATA: ${{ toJSON(matrix) }}
        run: |
          printf '%s' "$DATA" | jq

  #ain:
  # name: Main job
  # needs: init
  # strategy:
  #   matrix: ${{ fromJSON(needs.init.outputs.matrix) }}
  # runs-on: ${{ matrix.os }}
  # steps:
  #   - name: Report matrix values
  #     run: |
  #       echo "Repo: ${{ matrix.source.repo }}"
  #       echo "Ref:  ${{ matrix.source.ref  }}"
  #       echo "nixPath: ${{ matrix.nixPath }}"

