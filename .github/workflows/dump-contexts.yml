name: dump-contexts
on:
  workflow_dispatch:

jobs:
  dump:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        item:
          - item_1
          - item_2
    steps:
      - name: Generating an unique job ID
        id: job_id
        run: |
          echo "::set-output name=job_id::$(uuidgen -r)"

      - name: Getting URLs for the job ID ${{ steps.job_id.outputs.job_id }}
        run: |
          curl -H 'Authorization: token ${{github.token}}' \
            -H 'Accept: application/vnd.github+json' \
            '${{github.api_url}}/repos/${{github.repository}}/action/runs/${{github.run_id}}/jobs?filter=latest&per_page=100'

      - name: Try to find my run ID
        run: |
          # Try to find my run ID
          for delay in 1 2 5; do
            curl -H "Accept: application/vnd.github+json" \
              -H 'Authorization: token ${{github.token}}' \
              '${{github.api_url}}/repos/${{github.repository}}/commits/${{github.sha}}/check-runs?status=in_progress&check_name=dump%20(${{matrix.item}})'
            sleep $delay
          done

      - name: Dump JSON contexts
        env:
          github: ${{ toJSON(github) }}
          strategy: ${{ toJSON(strategy) }}
          matrix: ${{ toJSON(matrix) }}
          job: ${{ toJSON(job) }}
          runner: ${{ toJSON(runner) }}
          env: ${{ toJSON(env) }}
        run: |
          # Dump JSON contexts
          for var in github strategy matrix job runner env; do
            echo "::group::$var"
            jq -n "env.${var} | fromjson"
            echo "::endgroup::"
          done

      - name: Dump shell environment
        run: set
