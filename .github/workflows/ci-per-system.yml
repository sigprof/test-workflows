name: CI per system
on:
  workflow_call:
    inputs:
      system:
        required: true
        type: string
      runs-on:
        required: true
        type: string
      matrix:
        required: true
        type: string

jobs:
  pkgs:
    runs-on: ${{ inputs.runs-on }}
    if: fromJSON(inputs.matrix).flake.packages.item[0]
    strategy:
      matrix: ${{ fromJSON(inputs.matrix).flake.packages }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.2
      - name: Build
        uses: ./.github/actions/ci-build-step
        with:
          item: ${{ toJSON(matrix.item) }}
          system: ${{ inputs.system }}
          cachix-name: sigprof
          cachix-auth-token: ${{ secrets.CACHIX_AUTH_TOKEN }}

  nur:
    runs-on: ${{ inputs.runs-on }}
    if: >
      fromJSON(inputs.matrix).nur.check[0] &&
      fromJSON(inputs.matrix).nur.channel[0]
    strategy:
      matrix: ${{ fromJSON(inputs.matrix).nur }}
    steps:
      - run: |
          echo "Building ${{ matrix.check }} on ${{ matrix.channel }}"

  nur-main:
    needs:
      - pkgs
    runs-on: ${{ inputs.runs-on }}
    if: >
      always() &&
      (needs.pkgs.result == 'success' || needs.pkgs.result == 'skipped') &&
      fromJSON(inputs.matrix).nur-main.check[0] &&
      fromJSON(inputs.matrix).nur-main.channel[0]
    strategy:
      matrix: ${{ fromJSON(inputs.matrix).nur-main }}
    steps:
      - run: |
          echo "Building ${{ matrix.check }} on ${{ matrix.channel }}"

  hosts:
    needs:
      - pkgs
    runs-on: ${{ inputs.runs-on }}
    if: >
      always() &&
      (needs.pkgs.result == 'success' || needs.pkgs.result == 'skipped') &&
      fromJSON(inputs.matrix).flake.hosts.item[0]
    strategy:
      matrix: ${{ fromJSON(inputs.matrix).flake.hosts }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.2
      - name: Build
        uses: ./.github/actions/ci-build-step
        with:
          item: ${{ toJSON(matrix.item) }}
          system: ${{ inputs.system }}
          cachix-name: sigprof
          cachix-auth-token: ${{ secrets.CACHIX_AUTH_TOKEN }}

  checks:
    needs:
      - pkgs
    runs-on: ${{ inputs.runs-on }}
    if: >
      always() &&
      (needs.pkgs.result == 'success' || needs.pkgs.result == 'skipped') &&
      fromJSON(inputs.matrix).flake.checks.item[0]
    strategy:
      matrix: ${{ fromJSON(inputs.matrix).flake.checks }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.2
      - name: Build
        uses: ./.github/actions/ci-build-step
        with:
          item: ${{ toJSON(matrix.item) }}
          system: ${{ inputs.system }}
          cachix-name: sigprof
          cachix-auth-token: ${{ secrets.CACHIX_AUTH_TOKEN }}
