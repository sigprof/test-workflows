name: CI Test
on:
  pull_request:
  push:
    branches:
      - main
      - master
  workflow_dispatch:
    inputs:
      mode:
        description: 'Test mode: quick|default|full'
        required: true
        default: "default"

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      strategy: ${{ steps.strategy.outputs.result }}
    steps:
      - id: strategy
        name: Determine strategy for the build
        uses: actions/github-script@v5.0.0
        with:
          script: |
            const quickMatrix = {
              os: [
                "ubuntu-latest"
              ]
            };
            const defaultMatrix = {
              os: [
                "ubuntu-latest",
                "macos-latest"
              ]
            };

            let mode = "default";
            if (context.eventName == "workflow_dispatch") {
              const payload = context.payload;
              const inputs = payload && payload.inputs;
              mode = inputs && inputs.mode && inputs.mode.trim() || "default";
            } else if (context.eventName == "schedule") {
              mode = "full";
            }

            const strategy = {
              "fail-fast": !(mode == "full"),
              "matrix": (mode == "quick") ? quickMatrix : defaultMatrix
            };

            core.startGroup("Job strategy:");
            core.info(JSON.stringify(strategy, null, 2));
            core.endGroup();

            return strategy;
    
  dump:
    name: Dump
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Report data
        env:
          DATA: ${{ needs.setup.outputs.strategy }}
        run: |
          printf '%s' "$DATA" | jq

  build:
    name: Build
    needs: setup
    strategy: ${{ fromJSON(needs.setup.outputs.strategy) }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Fail
        run: |
          false
