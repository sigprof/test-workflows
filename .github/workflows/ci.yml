name: CI
on:
  push:
    branches:
      - main
      - master
  pull_request:
  workflow_dispatch:
    inputs:
      flake_only:
        description: 'Run flake tests only'
        default: false
        type: boolean

defaults:
  run:
    # Use `bash` by default.  Note that, according to the documentation, the
    # real command is `bash --noprofile --norc -eo pipefail {0}`, which makes
    # the shell catch any errors in pipelines.
    shell: bash

env:
  CACHIX_NAME: sigprof

  flake_only: >-
    ${{
      (!!inputs.flake_only) ||
      (
        github.event_name == 'pull_request' &&
        github.event.pull_request.head.repo.full_name == 'sigprof/test-workflows' &&
        startsWith(github.event.pull_request.head.ref, 'automatic-flake-update/')
      )
    }}

jobs:
  setup:
    strategy:
      matrix:
        # The value of `data` must be a sequence with a single element, which is
        # a mapping that will be used as the matrix for the actual build job.
        # Apparently this is the only way to keep the matrix represented in the
        # YAML form while still being able to process it as data.
        data:
          - x86_64-linux:
              flake:
                check:
                  - pkg1
                  - pkg2
              nur:
                check:
                  - pkg1
                  - pkg2
                channel:
                  - nixos-21.11
                  - nixos-unstable
                  - nixpkgs-unstable
              nur-main:
                check:
                  - pkg1
                  - pkg2
                channel:
                  - nixos-22.05
              flake-hosts:
                check:
                  - host-1
                  - host-2
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2.4.2
      - uses: cachix/install-nix-action@v17
      - uses: cachix/cachix-action@v10
        with:
          name: ${{ env.CACHIX_NAME }}
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          extraPullNames: "pre-commit-hooks"
      - run: nix flake check --no-build
      - id: matrix
        name: Prepare matrix
        run: |
          matrix="$(nix eval --json .\#lib.ciOutputs)"
          printf '::set-output name=matrix::%s\n' "$matrix"
 
  x86_64-linux:
    needs:
      - setup
    uses: ./.github/workflows/ci-arch.yml
    with:
      system: x86_64-linux
      runs-on: ubuntu-latest
      matrix: ${{ toJSON(fromJSON(needs.setup.outputs.matrix).x86_64-linux) }}
    secrets: inherit

  finish:
    needs:
      - x86_64-linux
    runs-on: ubuntu-latest
    steps:
      - run: echo "Dummy finish"
