name: ci-build-step
description: CI Build Step
author: Sergey Vlasov
inputs:
  item:
    required: true
    description: The item to build specified in the JSON format
  system:
    required: true
    description: Nix system name
  cachix-name:
    required: false
    description: Cachix cache name
  cachix-auth-token:
    required: false
    description: Cachix auth token
runs:
  using: composite
  steps:
    - name: Install Nix
      uses: sigprof/install-nix-action@6c5ba55bfdc791cfad61ac72e473340c1c3ac992
    - name: Setup Cachix
      uses: cachix/cachix-action@v10
      with:
        name: ${{ inputs.cachix-name }}
        authToken: '${{ inputs.cachix-auth-token }}'
    - name: Build
      shell: bash
      env:
        ITEM: ${{ inputs.item }}
        SYSTEM: ${{ inputs.system }}
      run: |
        : Flake build script
        echo "::group::Determining arguments for 'nix build'"
        build_args="$(
          jq -rn --arg system "$SYSTEM" '
            env.ITEM | fromjson |
              (.packages[] | @text ".#packages."+$system+".\(.)")?,
              (.checks[] | @text ".#checks."+$system+".\(.)")?,
              (.hosts[] | @text ".#nixosConfigurations.\(.).config.system.build.toplevel")?
          '
        )"
        printf '  %s\n' $build_args
        echo "::endgroup::"
        echo "::group::Creating derivations for build"
        build_output="$( nix build --dry-run --json $build_args )"
        drv_list="$(
          printf '%s' "$build_output" | jq -r '.[].drvPath'
        )"
        echo "::endgroup::"
        echo "::group::Derivation list:"
        printf '  %s\n' "$drv_list"
        echo "::endgroup::"
        echo "::group::Building derivations"
        build_result=0
        nix build --print-build-logs --json $drv_list || build_result=$?
        echo "::endgroup::"
        echo "::group::Saving build logs"
        mkdir -p .build/logs
        find /nix/var/log/nix/drvs -type f -printf '%P\n' |
          while read log_src; do
            log_dst="${log_src//\//}"
            cp -v /nix/var/log/nix/drvs/"$log_src" .build/logs/"$log_dst" ||:
          done
        echo "::endgroup::"
        exit $build_result
    - name: Upload build logs
      if: ${{ always() }}
      uses: actions/upload-artifact@v3.1.0
      with:
        name: build-logs-${{inputs.system}}-${{github.job}}-${{strategy.job-index}}
        path: ".build/logs/*"
        if-no-files-found: ignore
